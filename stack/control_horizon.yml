# horizon
---

  # install packages

  - apt:
      package: "{{ item }}"
      state: latest
    become: yes
    with_items:
    - openstack-dashboard

  # Configure the dashboard to use OpenStack services on the controller node:
  # Allow all hosts to access the dashboard:
  # Configure the memcached session storage service:
  #   -- ! Comment out any other session storage configuration.
  # Enable the Identity API version 3:
  # Enable support for domains:
  # Configure API versions:
  # Configure default as the default domain for users that you create 
  # Configure user as the default role for users that you create 
  # If you chose a provider network, disable support for layer-3 networking
  # Optionally, configure the time zone:

  - blockinfile:
      marker: '# control_horizon_marker'
      dest: /etc/openstack-dashboard/local_settings.py
      block: |
        OPENSTACK_HOST = "{{ master_ip }}"
        ALLOWED_HOSTS = ['*', ]
        SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
        CACHES = {
            'default': {
                 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
                 'LOCATION': '{{ master_ip }}:11211',
            }
        }
        OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST
        OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
        OPENSTACK_API_VERSIONS = {
            "identity": 3,
            "image": 2,
            "volume": 2,
        }
        OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = "default"
        OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"
        OPENSTACK_NEUTRON_NETWORK.update({
            'enable_router': False,
            'enable_quotas': False,
            'enable_distributed_router': False,
            'enable_ha_router': False,
            'enable_lb': False,
            'enable_firewall': False,
            'enable_vpn': False,
            'enable_fip_topology_check': False,
        })
        TIME_ZONE = "America/New_York"
    become: yes

  # Reload the web server configuration:

  - shell: service apache2 reload
    become: yes

